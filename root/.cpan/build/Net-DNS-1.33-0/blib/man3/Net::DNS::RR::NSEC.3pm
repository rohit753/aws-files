.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Net::DNS::RR::NSEC 3pm"
.TH Net::DNS::RR::NSEC 3pm "2021-12-16" "perl v5.30.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::DNS::RR::NSEC \- DNS NSEC resource record
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    use Net::DNS;
\&    $rr = Net::DNS::RR\->new( \*(Aqname NSEC nxtdname typelist\*(Aq );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Class for \s-1DNSSEC NSEC\s0 resource records.
.SH "METHODS"
.IX Header "METHODS"
The available methods are those inherited from the base class augmented
by the type-specific methods defined in this package.
.PP
Use of undocumented package features or direct access to internal data
structures is discouraged and could result in program termination or
other unpredictable behaviour.
.SS "nxtdname"
.IX Subsection "nxtdname"
.Vb 2
\&    $nxtdname = $rr\->nxtdname;
\&    $rr\->nxtdname( $nxtdname );
.Ve
.PP
The Next Domain field contains the next owner name (in the
canonical ordering of the zone) that has authoritative data
or contains a delegation point \s-1NS\s0 RRset.
.SS "typelist"
.IX Subsection "typelist"
.Vb 2
\&    @typelist = $rr\->typelist;
\&    $typelist = $rr\->typelist;
.Ve
.PP
\&\fBtypelist()\fR identifies the RRset types that exist at the \s-1NSEC RR\s0
owner name.  When called in scalar context, the list is interpolated
into a string.
.SS "typemap"
.IX Subsection "typemap"
.Vb 1
\&    $exists = $rr\->typemap($rrtype);
.Ve
.PP
\&\fBtypemap()\fR returns a Boolean true value if the specified RRtype occurs
in the type bitmap of the \s-1NSEC\s0 record.
.SS "match"
.IX Subsection "match"
.Vb 1
\&    $matched = $rr\->match( \*(Aqexample.foo\*(Aq );
.Ve
.PP
\&\fBmatch()\fR returns a Boolean true value if the canonical form of the name
argument matches the canonical owner name of the \s-1NSEC RR.\s0
.SS "covers"
.IX Subsection "covers"
.Vb 1
\&    $covered = $rr\->covers( \*(Aqexample.foo\*(Aq );
.Ve
.PP
\&\fBcovers()\fR returns a Boolean true value if the canonical form of the name,
or one of its ancestors, falls between the owner name and the nxtdname
field of the \s-1NSEC\s0 record.
.SS "encloser, nextcloser, wildcard"
.IX Subsection "encloser, nextcloser, wildcard"
.Vb 2
\&    $encloser = $rr\->encloser( \*(Aqexample.foo\*(Aq );
\&    print "encloser: $encloser\en" if $encloser;
.Ve
.PP
\&\fBencloser()\fR returns the name of a provable encloser of the query name
argument obtained from the \s-1NSEC RR.\s0
.PP
\&\fBnextcloser()\fR returns the next closer name, which is one label longer
than the closest encloser.
This is only valid after \fBencloser()\fR has returned a valid domain name.
.PP
\&\fBwildcard()\fR returns the unexpanded wildcard name from which the next
closer name was possibly synthesised.
This is only valid after \fBencloser()\fR has returned a valid domain name.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c)2001\-2005 \s-1RIPE NCC.\s0  Author Olaf M. Kolkman
.PP
Portions Copyright (c)2018\-2019 Dick Franks
.PP
All rights reserved.
.PP
Package template (c)2009,2012 O.M.Kolkman and R.W.Franks.
.SH "LICENSE"
.IX Header "LICENSE"
Permission to use, copy, modify, and distribute this software and its
documentation for any purpose and without fee is hereby granted, provided
that the original copyright notices appear in all copies and that both
copyright notice and this permission notice appear in supporting
documentation, and that the name of the author not be used in advertising
or publicity pertaining to distribution of the software without specific
prior written permission.
.PP
\&\s-1THE SOFTWARE IS PROVIDED \*(L"AS IS\*(R", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.\s0
.SH "SEE ALSO"
.IX Header "SEE ALSO"
perl, Net::DNS, Net::DNS::RR, \s-1RFC4034, RFC9077\s0
